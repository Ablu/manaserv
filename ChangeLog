2005-12-18  Yohann Ferreira  <bertram@cegetel.net>

        * src/accounthandler.cpp, src/netcomputer.h, src/netcomputer.cpp,
        src/chathandler.cpp, src/connectionhandler.cpp,
        src/gamehandler.cpp, src/connectionhandler.h, src/state.h,
        src/state.cpp: Made the handlers use the countedPtr for Beings
        as they should. Fixed a segfault when removing a being from the
        world.

2005-12-17  Bjorn Steinbrink  <B.Steinbrink@gmx.de>

        * src/messageout.h: Fixed some 64bit issue.

2005-12-12  Yohann Ferreira  <bertram@cegetel.net>

        * src/accounthandler.cpp, src/netcomputer.h,
        src/netcomputer.cpp, src/defines.h, src/dalstorage.cpp,
        src/dalstorage.h, src/storage.h, src/client.cpp, src/main.cpp:
        Now beings are handled in netcomputer when added and removed
        from the world. addBeing() and removeBeing() are still crashy.
        Added check if the character's name already exists. Forgot about
        that. Added CMSG_CHAR_LIST packet support.

2005-12-11  Yohann Ferreira  <bertram@cegetel.net>

        * src/accounthandler.cpp, src/main.cpp, src/account.h,
        src/account.cpp, src/dalstorage.cpp, src/client.cpp,
        src/defines.h: Added Logout, and character deletion support.
        Also changed the response code when trying to login when already
        logged.
        * src/accounthandler.cpp, src/main.cpp, src/dalstorage.cpp,
        src/client.cpp, src/connectionhandler.cpp, src/defines.h:
        Added unregistering, checking on character's name and email
        length support. Also made some little tweaks.

2005-12-10  Yohann Ferreira  <bertram@cegetel.net>

        * src/dalstorage.cpp: Fixed the buggy part of getAccount()
        where the mapInfo() recordSet erased the value of charInfo.
        Now, characters can be created and selected, with the map
        they were in, set.

2005-12-09  Yohann Ferreira  <bertram@cegetel.net>

        * src/dalstorage.cpp, src/accounthandler.cpp: Temporary
        made a workaround the character misloading at login.
        Work is to be made to see why the mapInfo recordset is
        buggy. Also made the server more verbose about characters.

2005-12-08  Yohann Ferreira  <bertram@cegetel.net>

        * src/dalstorage.cpp, src/dalstorage.h, src/storage.h:
        Radically improve the getEmailList() again based on
        MrLindejer's good idea.
        * src/accounthandler.cpp: Simplify the code of Email check
        based on the previous improvement.

2005-12-06  Yohann Ferreira  <bertram@cegetel.net>

        * src/dalstorage.cpp: Improved the getEmailList() function.
        Now the file used as db or the db name is shown in log.
        * src/defines.h: Added some missing messages and values for
        them. Login, pass min, max length can be changed there now.
        * src/accounthandler.cpp: Added check and appropriate response
        when selecting, creating a character.

2005-12-05  Yohann Ferreira  <bertram@cegetel.net>

        * src/dalstorage.cpp: Added a working getEmailList() function.
        * src/accounthandler: Now tests if email already exists.
        * src/accounthandler.cpp, src/defines.h: Strengthens the way
        email addresses checked. Added good response for selecting
        a char when not logged.
        * src/storage.h, src/dalstorage.h, src/dalstorage.cpp: Added
        the getEmailList function, doesn't seem to work, but committed
        to see why.

2005-12-03  Yohann Ferreira  <bertram@cegetel.net>

        * src/accounthandler.cpp: Handling good conditions to register.
        Still lacks checking if the Email already exists.
        * src/dalstorage.cpp: Fixed a bug that throwed an exception when
        logging with an account that had no mapInfo yet.
        Still has to set these to defaults in such case.

2005-12-02  Yohann Ferreira  <bertram@cegetel.net>

        * src/main.cpp, src/accounthandler.h, src/accounthandler.cpp,
        src/configuration.h: Made the accounthandler reopen the db for
        SQLite to enable registering ! Now working.

2005-11-21  Aaron Marks  <nymacro@gmail.com>

        * src/state.cpp: Re-ordered a few statements to work better.
        * src/dalstorage.cpp: Now sets being's current map when getting a
        player's account.

2005-11-16  Aaron Marks  <nymacro@gmail.com>

        * src/state.h, src/state.cpp: Updated world related functions.
        * src/accounthandler.cpp: Now adds players who have selected a
        character to the game world.
        * src/object.h: Updated to include member variable for current map
        the object is located.

2005-11-15  Aaron Marks  <nymacro@gmail.com>

        * src/state.h, src/state.cpp: Updated world representation, added
        various methods which provide easy access to the game world.
        * src/defines.h: Added "private message" message.
        * src/client.cpp, scripts/init.rb: Added experimental remote access
        to Ruby's functionality.

2005-11-14  Aaron Marks  <nymacro@gmail.com>

        * src/bindings.i: Enabled "directors", allowing scripting language
        to override virtual functions.

2005-11-12  Aaron Marks  <nymacro@gmail.com>

        * src/main.cpp: Added scripting with Ruby support
        * src/bindings.i: Created basic SWIG bindings.
        * src/Makefile.am: Updated to support Ruby & generate SWIG
        bindings.
        * configure.ac: Updated to detect SWIG & Ruby, using them
        appropriately.
        * scripts/init.rb: Server initialization test script.

2005-11-10  Aaron Marks  <nymacro@gmail.com>

        * src/client.cpp: Updated client to support moving and equipping.
        * src/being.h, src/being.cpp: Added "hasItem"
        * src/state.cpp: Added beings updating.

2005-10-24  Yohann Ferreira  <Bertram@cegetel.net>

        * src/main.cpp: Added more useful infos at startup.
        * src/dal/dataprovider.h, src/dal/dataprovider.cpp,
        src/dal/sqlitedataprovider.cpp, src/dal/mysqldataprovider.cpp,
        src/dal/pqdataprovider.cpp, src/main.cpp, src/client.cpp:
        Grammar corrections, and a little bit of work on getting the name
        of the Db.
